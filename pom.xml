<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.zheng</groupId>
	<artifactId>dubbo-server</artifactId>
	<packaging>jar</packaging>
	<version>0.0.1-SNAPSHOT</version>
	<name>dubbo-server Maven Webapp</name>
	<url>http://maven.apache.org</url>

	<parent>
		<groupId>com.zheng</groupId>
		<artifactId>dubbo-parent</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>

	<dependencies>
		<dependency>
			<groupId>com.zheng</groupId>
			<artifactId>dubbo-core</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
	</dependencies>

	<build>
		<finalName>dubbo-server</finalName>
		
		<resources>
			<!-- 包含resources目录下的所有配置文件 -->
			<resource>
				<targetPath>${project.build.directory}/classes</targetPath>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>**/*.xml</include>
					<include>**/*.properties</include>
				</includes>
			</resource>
			
			<!-- 
				结合dubbo com.alibaba.dubbo.container.Main 它会去META-INF/spring目录下加载spring配置
				当前spring 配置文件放置在classpath/resources,这时就需要拷贝到META-INF/spring中
			 -->
			<resource>
				<targetPath>${project.build.directory}/classes/META-INF/spring</targetPath>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>applicationContext.xml</include>
				</includes>
			</resource>
		</resources>
		
		<!-- 解决maven插件在eclipse内执行的一系列生命周期引起的冲突问题 -->
		<pluginManagement>
			<plugins>
				<plugin>
			     <groupId>org.eclipse.m2e</groupId>
			     <artifactId>lifecycle-mapping</artifactId>
			     <version>1.0.0</version>
			     <configuration>
			       <lifecycleMappingMetadata>
			         <pluginExecutions>
			           <pluginExecution>
			             <pluginExecutionFilter>
			               <groupId>org.apache.maven.plugins</groupId>
			               <artifactId>maven-dependency-plugin</artifactId>
			               <versionRange>[2.0,)</versionRange>
			               <goals>
			                 <goal>copy-dependencies</goal>
			               </goals>
			             </pluginExecutionFilter>
			             <action>
			               <ignore/>
			             </action>
			           </pluginExecution>
			         </pluginExecutions>
			       </lifecycleMappingMetadata>
			     </configuration>
			    </plugin>
			</plugins>
		</pluginManagement>
		
		<plugins>
			<!-- 打包jar文件时，配置manifest文件，加入lib包的jar依赖 -->	
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<classesDirectory>target/classes/</classesDirectory>
					<archive>
						<manifest>
							<mainClass>com.alibaba.dubbo.container.Main</mainClass>
							<!-- 打包时MANIFEST.MF文件不记录的时间戳版本 -->
							<useUniqueVersions>false</useUniqueVersions>
							<addClasspath>true</addClasspath>
							<classpathPrefix>lib/</classpathPrefix>
						</manifest>
						<manifestEntries>
							<Class-Path>.</Class-Path>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<type>jar</type>
							<includeTypes>jar</includeTypes>
							<useUniqueVersions>false</useUniqueVersions>
							<outputDirectory>
								${project.build.directory/lib}
							</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
